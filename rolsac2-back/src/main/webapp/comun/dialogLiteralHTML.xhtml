<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
      xmlns:t="http://back.rolsac2.caib.es/tags">
<!--
Pàgina amb el llistat de personal d'una unitat administrativa.
-->
<ui:composition template="/WEB-INF/templates/layoutDialog.xhtml">

    <ui:define name="metadata">
        <!-- Parametros dialogo -->
		<f:metadata>
			<f:viewParam name="MODO_ACCESO" value="#{dialogLiteralHTML.modoAcceso}" />
			<f:viewParam id="ID" name="ID" value="#{dialogLiteralHTML.id}" />
			<f:viewParam name="idioma" value="#{dialogLiteralHTML.idiomaInicial}" />
			<f:viewAction action="#{dialogLiteralHTML.load}" />
			<f:event type="preRenderView" listener="#{dialogLiteralHTML.onload}" />
		</f:metadata>
    </ui:define>

	 <ui:define name="icerik">
    	<script src="../tinymce/js/tinymce/tinymce.min.js" type="text/javascript"></script>
    	<script type="text/javascript">


    	tinyMCE.init({
 		   // General options
 		    mode : "textareas",
 		    height: 559,
 		    plugins: "code image link lists paste textcolor",
 		    toolbar: "bold italic | forecolor backcolor | link image | alignleft aligncenter alignright alignjustify | numlist bullist outdent indent | removeformat #{dialogLiteralHTML.sourceCode}" ,
 		    menubar: "",
 		    paste_as_text : false,
 		   	readonly: #{dialogLiteralHTML.isConsulta()},
 		 });

	var idioma = 'es';
    /** Organiza los tabs. **/
    function mostrar(idioma) {
    	mostrarTab(idioma);
    	mostrarButton(idioma);
    }

   /** Funcion que muestra el tab con la traducción de cada idioma ***/
   function mostrarButton(idioma) {
	    ocultarButton("formDialog:btnCa");
	    ocultarButton("formDialog:btnEs");


	   	if (idioma == 'ca') {
	   		document.getElementById("formDialog:btnCa").classList.add("marcado");
	   		return;
	   	}
	   	if (idioma == 'es') {
	   		document.getElementById("formDialog:btnEs").classList.add("marcado");
	   		return;
	   	}
   }

   /** Ocultar button. **/
   function ocultarButton(elId) {
	   	if (document.getElementById(elId) != null) {
	   		document.getElementById(elId).classList.remove("marcado");
	   	}
   }

    /** Funcion que muestra el tab con la traducción de cada idioma ***/
    function mostrarTab(idioma) {
    	if(idioma!=null &amp;&amp; idioma!="null"){
	    	let listaIdiomas = "#{dialogLiteralHTML.idiomasPermitidos}";
	    	listaIdiomas = listaIdiomas.slice(1, -1);
	    	listaIdiomas = listaIdiomas.split(", ");
	    	listaIdiomas.forEach(element => {
	    		ocultarTab("formDialog:txt"+element.toUpperCase());
	    		document.getElementById("formDialog:btn"+element.charAt(0).toUpperCase()+element.slice(1)).firstChild.style.background = "#f5f5f5";
	    	});

	    	document.getElementById("formDialog:txt"+idioma.toUpperCase()).parentNode.style.display="";
			document.getElementById("formDialog:btn"+idioma.charAt(0).toUpperCase()+idioma.slice(1)).firstChild.style.background = "#e0d7da";
    	}

    }

    /** Ocultar tab. **/
    function ocultarTab(elId) {
    	if (document.getElementById(elId) != null) {
    		document.getElementById(elId).parentNode.style.display="none";
    	}
    }

    function guardar() {
    	let idiomas = #{sessionBean.getIdiomasPermitidosList()};
    	idiomas.foreach(guardarLoop)

    }

    function guardarLoop(item){
    	if (#{dialogLiteralHTML.visible(item)}) {
    		if (!checkTiny("formDialog:txt"+item.toUpperCase())) {
				document.getElementById("formDialog:btn"+item.charAt(0).toUpperCase() + item.slice(1)).click();
    			return;
    		}
    	}

    	document.getElementById("formDialog:btnGuardar").click();

    }

    /** Comprueba si esta vacio, En caso de no estarlo, rellena el campo. **/
    function checkTiny(id) {
    	var correcto = false;
    	var contenido = tinyMCE.get(id).getContent();
    	if (isVacio(contenido)) {
    		correcto = false;
    	} else {
    		correcto = true;
    		document.getElementById(id).value = contenido;
    	}
    	return correcto;
    }

  //<![CDATA[
    function isVacio(texto)  {
    	while (texto.indexOf('&nbsp;') >= 0) {
    		texto = texto.replace('&nbsp;',"");
    	}
    	while (texto.indexOf('</p>') >= 0) {
    		texto = texto.replace('</p>',"");
    	}
    	while (texto.indexOf('<p>') >= 0) {
    		texto = texto.replace('<p>',"");
    	}
    	while (texto.indexOf('\n') >= 0) {
    		texto = texto.replace('\n',"");
    	}
    	texto = texto.trim();
    	if (texto == '') {
    		return true;
   		}
    	return false;
    }
  //]]>
    </script>
  </ui:define>

    <ui:define name="pageTitleDialog">
        Gestión de literales HTML
    </ui:define>


    <ui:define name="contentDialog" >
        <p:panel onload="mostrar('#{dialogLiteralHTML.idiomaInicial}')" id="panelIdiomas">
				<p:growl id="growlDialogTraduccion"  globalOnly="false"
								                     showDetail="true"
								                     life="5000"
								                     process="@all"
								                     escape="false"/>

						<div class="ui-inputgroup" align="center" style="margin-top:5px;margin-bottom:5px">
							<c:forEach items="#{dialogLiteralHTML.idiomasPermitidos}" var="idioma">
            					<p:commandButton id="btn#{idioma.substring(0, 1).toUpperCase().concat(idioma.substring(1))}" value="#{labels['idiomas.' += idioma]}"  oncomplete="mostrar('#{idioma}')" process="@this" style="outline:none !important;" actionListener="dialogLiteralHTML.setIdioma(idioma)"/>
							</c:forEach>
        				</div>
						<c:forEach items="#{dialogLiteralHTML.idiomasPermitidos}" var="idioma">
            				<div style="margin:10px" rendered="#{dialogLiteralHTML.visible(idioma)}" >
								<p:inputTextarea id="txt#{idioma.toUpperCase()}" value="#{dialogLiteralHTML.texto[idioma.substring(0, 1).toUpperCase().concat(idioma.substring(1))]}" disabled="#{dialogLiteralHTML.isConsulta()}" rows="14" cols="140" autoResize="false" maxlength="4000" style="height:559px"  />
							</div>
            			</c:forEach>

				</p:panel>
	</ui:define>



    <ui:define name="contentFooterDialogLeft">
        <p:commandButton  action="#{dialogLiteralHTML.ayuda}"
                          icon="pi pi-info-circle" iconPos="top"
                         value="#{labels['dict.ayuda']}"
                         process="@this" />
    </ui:define>
    <ui:define name="contentFooterDialogRight">

						<p:commandButton id="btnGuardar" value="#{labels['dict.aceptar']}" onclick="tinyMCE.triggerSave(true,true);" rendered="#{!dialogLiteralHTML.isConsulta()}" process="@all" update="formDialog:growlDialogTraduccion" action="#{dialogLiteralHTML.guardar()}" styleClass="boton-azul"/>
						<p:commandButton value="#{labels['dict.borrar']}" actionListener="#{dialogLiteralHTML.borrar()}" process="@this"  rendered="#{!dialogLiteralHTML.isConsulta()}" tyleClass="boton-rojo"/>
						<p:commandButton value="#{labels['dict.cancelar']}" actionListener="#{dialogLiteralHTML.cancelar()}" process="@this"/>

			<p:commandButton id="btnErrorCa" actionListener="#{dialogLiteralHTML.errorCa()}" update="formDialog:growlDialogTraduccion" style="display:none" process="@this"/>
			<p:commandButton id="btnErrorEs" actionListener="#{dialogLiteralHTML.errorEs()}" update="formDialog:growlDialogTraduccion" style="display:none" process="@this"/>

    </ui:define>

</ui:composition>
</html>

name: Set Start Date in GitHub Project
on:
  issues:
    types: [opened]

jobs:
  update-project-field:
    runs-on: ubuntu-latest
    steps:
      - name: Set Start Date in GitHub Project
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ORG_PAT }}
          script: |
            const { owner, repo } = context.repo;
            const issueId = context.payload.issue.node_id;
            const projectNumber = 55;  
            const fieldName = "Start date";

            // Obtener la fecha actual en formato YYYY-MM-DD
            const startDate = new Date().toISOString().split("T")[0];

            const query = 
              query($org: String!, $projectNumber: Int!) {
                organization(login: $org) {
                  projectV2(number: $projectNumber) {
                    id
                    fields(first: 20) {
                      nodes {
                        ... on ProjectV2Field {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              };
                        
            const variables = { org: "GovernIB", projectNumber: 55 };
            const result = await github.graphql(query, variables);
            
            if (!result.organization || !result.organization.projectV2) {
              throw new Error(❌ No se encontró el proyecto con número ${projectNumber} en la organización 'GovernIB');
            }
            
            const projectId = result.organization.projectV2.id;
            const field = result.organization.projectV2.fields.nodes.find(f => f.name === fieldName);

            if (!field) {
              throw new Error(❌ No se encontró el campo personalizado: ${fieldName});
            }

            const fieldId = field.id;

            // 2️⃣ Agregar la issue al proyecto si no está ya en él
            const addItemMutation = 
              mutation($projectId: ID!, $issueId: ID!) {
                addProjectV2ItemById(input: {projectId: $projectId, contentId: $issueId}) {
                  item {
                    id
                  }
                }
              };

            const addItemResult = await github.graphql(addItemMutation, { projectId, issueId });
            const itemId = addItemResult.addProjectV2ItemById.item.id;

            // 3️⃣ Actualizar el campo startDate
            const updateFieldMutation = 
              mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $startDate: String!) {
                updateProjectV2ItemFieldValue(input: {projectId: $projectId, itemId: $itemId, fieldId: $fieldId, value: {text: $startDate}}) {
                  projectV2Item {
                    id
                  }
                }
              };

            await github.graphql(updateFieldMutation, { projectId, itemId, fieldId, startDate });

            console.log(✅ Campo '${fieldName}' actualizado con fecha: ${startDate});

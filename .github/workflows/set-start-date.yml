name: Set Start Date in GitHub Project
on:
  issues:
    types: [opened]

jobs:
  update-project-field:
    runs-on: ubuntu-latest
    steps:
      - name: Set Start Date in GitHub Project
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issueId = context.payload.issue.node_id;
            const projectNumber = 55;  
            const fieldName = "Start date";

            // Obtener la fecha actual en formato YYYY-MM-DD
            const startDate = new Date().toISOString().split("T")[0];

            const query = `
              query($owner: String!, $repo: String!, $projectNumber: Int!) {
                repository(owner: $owner, name: $repo) {
                  projectV2(number: $projectNumber) {
                    id
                    fields(first: 20) {
                      nodes {
                        id
                        name
                      }
                    }
                  }
                }
              }`;

            const variables = { owner, repo, projectNumber };
            const result = await github.graphql(query, variables);

            if (!result.repository.projectV2) {
              throw new Error(`❌ No se encontró el proyecto con número ${projectNumber}`);
            }

            const projectId = result.repository.projectV2.id;
            const field = result.repository.projectV2.fields.nodes.find(f => f.name === fieldName);

            if (!field) {
              throw new Error(`❌ No se encontró el campo personalizado: ${fieldName}`);
            }

            const fieldId = field.id;

            const mutation = `
              mutation($projectId: ID!, $issueId: ID!, $fieldId: ID!, $startDate: String!) {
                updateProjectV2ItemFieldValue(input: {projectId: $projectId, itemId: $issueId, fieldId: $fieldId, value: {text: $startDate}}) {
                  projectV2Item {
                    id
                  }
                }
              }`;

            await github.graphql(mutation, { projectId, issueId, fieldId, startDate });

            console.log(`✅ Campo '${fieldName}' actualizado con fecha: ${startDate}`);
